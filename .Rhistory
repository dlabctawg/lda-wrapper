,intensify=T
,intensity=0.1
#	,sample=3
,index=c(10)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10,11)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10,12)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10,11,12)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10,11,12,13)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10:19)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10:15)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(stmbow2lda = stmbow2lda,R = 10,lambda.step = 0.5,reorder.topics = F)
ftxt2stmbow<-ftxt2stmbow.f(string=samp$speech)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
#	,sample=3
,index=c(10:15)
,out.dir='output'
,axes=F
,spacing=.3
,pdf=T
)
source('~/.active-rstudio-document', echo=TRUE)
sample.size=10
paste("icpsr2stmbow-samp",if(sample.size,sample.size,'all'),".RData",sep="")
paste("icpsr2stmbow-samp",ifelse(sample.size,sample.size,'all'),".RData",sep="")
getwd()
out.dir='output'
save.to.disk=T
if(save.to.disk) {setwd(out.dir);save(icpsr2stmbow,file=sfn)}
sfn<-paste("icpsr2stmbow-samp",ifelse(sample.size,sample.size,'all'),".RData",sep="")
sfn
sample.size=10000
sfn<-paste("icpsr2stmbow-samp",ifelse(sample.size,sample.size,'all'),".RData",sep="")
getwd()
setwd('..')
getwd()
sfn
dir(pattern=out.dir,full.names=T,recursive=T,ignore.case=F)[1]
dir
dir()
dir(pattern=out.dir,all.files = T,full.names=T,recursive=T,ignore.case=F)[1]
dir(all.files = T,full.names=T,recursive=T,ignore.case=F)[1]
getwd()
dir()
dir(all.files = T,full.names=T,recursive=T,ignore.case=F)
dir(all.files = T,full.names=T,recursive=T,ignore.case=F,include.dirs=T)
dir(include.dirs = T,full.names=T,recursive=T,ignore.case=F,include.dirs=T)
dir(include.dirs = T,full.names=T,recursive=T,ignore.case=F)
dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F)
grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)
ls()
l<-ls()[-17]
l
setdiff(ls(),l)
setdiff(c(ls(),'l'),l))
setdiff(c(ls(),'l'),l)
setdiff(ls(),c(l,'l'))
get(setdiff(ls(),c(l,'l')))
sfn
getwd()
try(setwd(grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)))
getwd()
try(save(icpsr2stmbow,file=sfn))
grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)[1]
grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)
out.dir
setwd('..')
grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)
grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)[1]
try(save(icpsr2stmbow,file=paste(grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)[1],sfn,sep=.Platform$file.sep)))
sfn<-"ftxt2stmbow.RData"
if(save.to.disk) try(save(ftxt2stmbow,file=paste(grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)[1],sfn,sep=.Platform$file.sep)))
str(icpsr2stmbow,max.level = 3,list.len = 5)
findThoughts(stmbow2lda$model,texts=samp[names(icpsr2stmbow$documents),speech],n=1)
findThoughts(stmbow2lda$model,texts=samp[names(icpsr2stmbow$documents),speech],n=1,topics=1:5)
?setnames
sfn<-'lda2rel.RData'
if(save.to.disk) try(save(lda2rel,file=paste(grep(paste(out.dir,'$',sep=''),dir(include.dirs = T,full.names=T,recursive=F,ignore.case=F),value = T)[1],sfn,sep=.Platform$file.sep)))
length(ftxt2stmbow$map)
sample(1:length(ftxt2stmbow$map),3)
set.seed(1)
sample(1:length(ftxt2stmbow$map),3)
set.seed(1)
sample(1:length(ftxt2stmbow$map),3)
paste('output',seed,sep=.Platform$file.sep)
seed<-1
paste('output',seed,sep=.Platform$file.sep)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(
stmbow2lda = stmbow2lda
,R = 10
,lambda.step = 0.5
,reorder.topics = F
,save.to.disk=F
,check.for.saved.output=T
)
ftxt2stmbow<-ftxt2stmbow.f(
string=samp$speech
,save.to.disk=F
,check.for.saved.output=T
)
source('source.R')
lda2rel<-lda2rel.f(
stmbow2lda = stmbow2lda
,R = 10
,lambda.step = 0.5
,reorder.topics = F
,save.to.disk=F
,check.for.saved.output=T
)
ftxt2stmbow<-ftxt2stmbow.f(
string=samp$speech
,save.to.disk=F
,check.for.saved.output=T
)
ftxt2stmbow<-ftxt2stmbow.f(
string=NULL #samp$speech
,save.to.disk=F
,check.for.saved.output=T
)
seed<-1
set.seed(seed)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
,index=sample(1:length(ftxt2stmbow$map),3)
,out.dir=paste('output',seed,sep=.Platform$file.sep)
,axes=T
,spacing=.3
,pdf=T
)
try(stop('hat'))
try.catch(stop('hat'))
trycatch(stop('hat'))
??try
tryCatch(stop('hat'))
b<-tryCatch(stop('hat'))
b
inherits(tryCatch(stop('hat')))
inherits(tryCatch(stop('hatd)))
''
inherits(tryCatch(stopd('hatd')))
tryCatch(stopd('hatd'))
b<-tryCatch(stopd('hatd'))
b
class(tryCatch(stopd('hatd')))
x <- tryCatch(stop("Error"), error = function(e) e)
x
x <- tryCatch(stop("Error"))
x
rm(x)
x <- tryCatch(stop("Error"))
x
inherits(tryCatch(stop("Error"), error = function(e) e))
inherits(tryCatch(stop("Error"), error = function(e) e),'try-error')
inherits(tryCatch(stop("Error"), error = function(e) e),'error')
out.dir
dir(include.dirs = T,recursive=T)
dir(include.dirs = T,recursive=T,full.names = T)
!missing(out.dir)
grep(letters,'23',value=T)
grep('23',letters,value=T)
d
d<-dir(include.dirs = T,recursive=T,full.names = T)
d
out.dir<-grep(paste(out.dir,'$',sep=''),d,value=T)
out.dir
length(out.dir)
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(
stmbow2lda = stmbow2lda
,R = 10
,lambda.step = 0.5
,reorder.topics = F
,save.to.disk=F
,check.for.saved.output=T
)
ftxt2stmbow<-ftxt2stmbow.f(
string=samp$speech
,save.to.disk=F
,check.for.saved.output=T
)
seed<-1
set.seed(seed)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
,index=sample(1:length(ftxt2stmbow$map),3)
,out.dir=paste('output',seed,sep=.Platform$file.sep)
,axes=T
,spacing=.3
,pdf=T
,mxdoc.word.prop=.15
)
library(lineprof)
library(shiny)
shine(lineprof('hat'))
shine(lineprof(rnorm(10^6)))
setwd('/Users/bambrose/Dropbox/GitHub/dlabctawg/lda-wrapper')
source('source.R')
lda2rel<-lda2rel.f(
stmbow2lda = stmbow2lda
,R = 10
,lambda.step = 0.5
,reorder.topics = F
,save.to.disk=F
,check.for.saved.output=T
)
ftxt2stmbow<-ftxt2stmbow.f(
string=samp$speech
,save.to.disk=F
,check.for.saved.output=T
)
seed<-1
set.seed(seed)
library(lineprof)
library(shiny)
shine(lineprof(m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
,index=sample(1:length(ftxt2stmbow$map),3)[1]
,out.dir=paste('output',seed,sep=.Platform$file.sep)
,axes=T
,spacing=.3
,pdf=T
)))
source('~/.active-rstudio-document', echo=TRUE)
lda2rel
x
print(f)
swu
sapply(split(swu,f),cumsum)
x<-sapply(split(swu,f),cumsum)
xl<-max(sapply(x,sum))
xl
x<-unlist(sapply(x,function(x) c(0,x[-length(x)])))
x
x<-sapply(split(swu,f),cumsum)
xl<-max(sapply(x,sum))
x<-lapply(split(swu,f),cumsum)
xl<-max(sapply(x,sum))
x<-unlist(sapply(x,function(x) c(0,x[-length(x)])))
x
x<-lapply(split(swu,f),cumsum)
x
source('~/.active-rstudio-document', echo=TRUE)
colors()
source('~/.active-rstudio-document', echo=TRUE)
f<-cumsum(swu)%/%pw
cbind(f,swu)
x<-lapply(split(swu,f),cumsum)
head(cbind(f,swu,cumsum(unlist(x))))
head(cbind(f,swu,cumsum(unlist(x))),20)
head(cbind(f,swu,unlist(x)),20)
head(cbind(f,swu,unlist(x)),100)
head(cbind(f,swu,x=unlist(x)),100)
head(data.frame(o,f,swu,x=unlist(x)),100)
example("prepDocuments")
source('~/.active-rstudio-document', echo=TRUE)
f<-cumsum(swu)%/%pw
x<-lapply(split(swu,f),cumsum)
xl<-max(sapply(x,sum))
x<-unlist(sapply(x,function(x) c(0,x[-length(x)])))
f<-cumsum(swu)%/%pw
x<-lapply(split(swu,f),cumsum)
x[8]
x[[8]]
print(f)
head(cbind(f,cumsum(swu)))
head(cbind(f,cumsum(swu)),100)
head(cbind(f,cumsum(swu)),500)
fl<-list()
x<-list()
sww<-swu
ct<-0
f<-cumsum(sww)%/%pw
g<-f
while(max(f)>0){
ft<-f==0
x[[length(x)+1]]<-cumsum(sww[ft])
sww<-sww[!ft]
fl[[length(fl+1)]]<-rep(ct,sum(ft))
f<-cumsum(sww)%/%pw
ct<-ct+1
}
source('~/.active-rstudio-document', echo=TRUE)
cbind(o,f,100)
source('~/.active-rstudio-document', echo=TRUE)
?"option"
source('~/.active-rstudio-document', echo=TRUE)
source('source.R')
for(seed in 1:5){
lda2rel<-lda2rel.f(
stmbow2lda = stmbow2lda
,R = 20
,lambda.step = 0.5
,reorder.topics = F
,out.dir=od
,save.to.disk=std
,check.for.saved.output=F #cfso
)
ftxt2stmbow<-ftxt2stmbow.f(
string=samp$speech
,save.to.disk=std
,check.for.saved.output=cfso
,out.dir=od
)
options(warn=1)
set.seed(seed)
m<-lda2ftxt.f(
map=ftxt2stmbow$map
,doc.top=stmbow2lda$doc.top.theta
,top.word=stmbow2lda$top.word.phi.beta
,lda2rel=lda2rel
,intensify=T
,intensity=0.2
,index=sort(sample(1:length(ftxt2stmbow$map),3))
,out.dir=paste(od,seed,sep=.Platform$file.sep)
,axes=T
,spacing=.3
,pdf=T
)
}
source('~/.active-rstudio-document', echo=TRUE)
?dev.new
dev.new(noRStudioGD = T)
source('source.R')
seed
?png
plot(iris)
plot
UseMethod
text(1,1,'hot')
plot.default()
plot()
plot
plot.default()
plot.default
source('source.R')
source('~/.active-rstudio-document', echo=TRUE)
?dev.new
graphics.off()
dev.list()
source('~/.active-rstudio-document', echo=TRUE)
plot.default
m
invisible()
par
source('~/.active-rstudio-document', echo=TRUE)
cat('\nCalucating document by word probability matrix =\n(document by topic vector) * (topic by word matrix)')
cat('\nCalculating document\'s topic by word probability matrix =\n(document by topic prob vector) * (topic by word prob matrix)')
cat('\nCalculating document\'s topic by word probability matrix =\n(document by topic prob vector) * (global topic by word prob matrix)')
cat('\nOriginal range of predicted document\'s topic by word probabilities:')
m
names(m)
help(stm)
"stm-package"
help(package="stm-package")
help(package="stm")
str(icpsr.cong107,max.level = 3,list.len = 5)
ls()
grep('lda',ls(),value=T)
sum(stmbow2lda$top.word.phi.beta[1,])
sum(stmbow2lda$top.word.phi.beta[,1])
sum(stmbow2lda$doc.top.theta[1,])
sum(stmbow2lda$doc.top.theta[,1])
